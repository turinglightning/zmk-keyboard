/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define NUMBER  1
#define SYMBOL  2
#define HOTKEY  3
#define SETTING 4
#define AS(keycode) &as LS(keycode) keycode




/ {
        behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 0>, <&to 0>, <&to 0>;
        };
        
    };  

         behaviors {
       as: auto_shift {
        compatible = "zmk,behavior-hold-tap";
        label = "AUTO_SHIFT";
        #binding-cells = <2>;
        tapping-term-ms = <160>;
        quick-tap-ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
                };
modcp: mod_copy {
        compatible = "zmk,behavior-mod-morph";
        label = "MOD_COPY";
        #binding-cells = <0>;
        bindings = <&as LS(C) C>, <&kp C>;
        mods = <(LGUI | RGUI)>;
};
  
        };


    macros {
        macro_phone: macro_phone {
            // 1351
            label = "MACRO_PHONE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = < &kp N1 &kp N3 &kp N5  &kp N1>
                ;
        };
        
        macro_email_g: macro_email_g {
            // 135115
            compatible = "zmk,behavior-macro";
            label = "MACRO_EMAIL_GMAIL";
            #binding-cells = <0>;
            bindings
                = < &kp N1 &kp N3 &kp N5  &kp N1 &kp N1 &kp N5 >
                ;
        };
         
    };
    
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp ESC>;
        };
        
         combo_LSHFT {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp  LSHFT>;
        };
        
            combo_LGUI {
            timeout-ms = <50>;
            key-positions = <38 39>;
            bindings = <&kp LGUI>;
        };
        
   
          
  };


    keymap {
       compatible = "zmk,keymap";
       default_layer {
            label = "DEFAULT";
            bindings = <
&kp ESC  &kp N1 &kp N2 &kp N3 &kp N4 &kp N5  &kp GRAVE                       &kp LBKT &kp N6  &kp N7  &kp N8  &kp N9  &kp N0   &to 1
&kp TAB    &kp Q  &kp W    &kp E   &kp R   &kp T  &kp BSLH                   &kp RBKT &kp Y   &kp U   &kp I   &kp O   &kp P    &kp RSHIFT
&kp LSHIFT  &kp A  &kp S    &kp D    &kp F  &kp G &kp SEMI                   &kp SQT  &kp H   &kp J   &kp K   &kp L   &kp FSLH &kp ENTER
&kp CAPS &kp Z  &kp X    &kp C    &kp V     &kp B                                     &kp N   &kp M   &kp COMMA &kp DOT  &kp RWIN &kp DEL 
&kp LCTRL  &kp LALT  &kp END &kp HOME  &kp BACKSPACE  &kp ENTER                       &kp EQUAL &kp SPACE  &kp KP_PLUS  &kp KP_MINUS   &kp KP_MULTIPLY  &kp KP_DIVIDE  
&kp UP &kp DOWN	&kp RIGHT  &kp LEFT 	                                              &kp MINUS   &kp PG_DN &kp PG_UP &kp RSHIFT


            >;
        };
        number_layer {
            label = "NUMBER";
            bindings = <
    &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none &none &sys_reset                   &sys_reset  &none &none &none &none &none &to 0
    &none &none &none &none &none &none &none                                             &none       &none &none &none &none &none &none
    &none &bt BT_CLR &none &none &none &none  &none                                       &none       &none &none &none &none &none &none
    &none &out OUT_TOG &none &none &none &none                                                        &none &none &none &none &none &none 
    &none &none &none &none &none &none                                                               &none &none &none &none &none &none	
    &none &none &none &none                                                                           &none &none &none &none  	

            >;
        };

        symbol_layer {
            label = "SYMBOL";
            bindings = <
&none &none &none &none &none &none &none                                             &none &none &none &none &none &none &none
    &none &none &none &none &none &none &none                                             &none &none &none &none &none &none &none
    &none &none &none &none &none &none &none                                             &none &none &none &none &none &none &none
    &none &none &none &none &none &none                                                         &none &none &none &none &none &none 
    &none &none &none &none &none &none                                                         &none &none &none &none &none &none	
    &none &none &none &none                         	                                        &none &none &none &none  	                                                                                       
        
         >;
        };
   };
};
